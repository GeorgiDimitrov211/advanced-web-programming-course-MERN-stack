{"version":3,"sources":["Questions.js","Question.js","AskQuestion.js","PostAnswer.js","App.js","index.js"],"names":["Questions","questions","this","props","forEach","question","push","to","slug","key","className","title","answers","length","solved","React","Component","Question","state","handleChange","bind","_asyncRequest","getQuestion","questionSlug","then","response","json","data","setState","cancel","index","event","target","checked","voteForAnswer","Number","voteNumber","newQuestion","sort","a","b","answer","type","value","onChange","e","AskQuestion","handleSubmit","onSubmit","htmlFor","name","preventDefault","addQuestion","navigate","PostAnswer","newAnswer","console","log","answerObj","addAnswer","App","getAllQuestions","fetch","method","headers","body","JSON","stringify","answerSlug","newVoteNumber","from","noThrow","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c05ea3f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nclass Questions extends React.Component {\n  render() {\n    let questions = [];\n    this.props.questions.forEach(question => {\n      questions.push(\n        <Link to={question.slug} key={question.slug}>\n          <div className=\"question\">\n            <h2 className=\"question__title\">{question.title}</h2>\n            <div className=\"question__additional-info\">\n              <div className=\"question__additional-info-answers\">\n                Answers: {question.answers.length}\n              </div>\n              {(() => {\n                if (question.solved) {\n                  return (\n                    <div className=\"question__additional-info-solved\">\n                      Solved\n                    </div>\n                  );\n                }\n              })()}\n            </div>\n          </div>\n        </Link>\n      );\n    });\n\n    return (\n      <div>\n        <div className=\"questions\">{questions}</div>\n        <div className=\"questions\">\n          You didn't find the answer of your question?\n          <Link to=\"ask\"> Ask a question</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questions;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      question: {\n        title: \"\"\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._asyncRequest = this.props\n      .getQuestion(this.props.questionSlug)\n      .then(response => {\n        this._asyncRequest = null;\n        return response.json();\n      })\n      .then(data => {\n        this.setState({\n          question: data\n        });\n      });\n  }\n  componentWillUnmount() {\n    if (this._asyncRequest) {\n      this._asyncRequest.cancel();\n    }\n  }\n\n  handleChange(index, event) {\n    if (event.target.checked) {\n      this.props.voteForAnswer(\n        this.state.question.slug,\n        this.state.question.answers[index].slug,\n        Number(this.state.question.answers[index].voteNumber) + 1\n      );\n\n      let newQuestion = this.state.question;\n      this.newQuestion.answers[index].voteNumber++;\n      this.setState({\n        question: newQuestion\n      });\n    } else {\n      this.props.voteForAnswer(\n        this.state.question.slug,\n        this.state.question.answers[index].slug,\n        Number(this.state.question.answers[index].voteNumber) - 1\n      );\n      let newQuestion = this.state.question;\n      this.newQuestion.answers[index].voteNumber--;\n      this.setState({\n        question: newQuestion\n      });\n    }\n  }\n\n  render() {\n    if (this.state.question === null) {\n      return \"Loading\";\n    } else {\n      let answers = [];\n      if (this.state.question.answers) {\n        this.state.question.answers.sort((a, b) => b.voteNumber - a.voteNumber);\n        this.state.question.answers.forEach((answer, index) => {\n          answers.push(\n            <div key={index}>\n              <h4>Answer {index + 1}</h4>\n              <p>{answer.title}</p>\n              <p>\n                This answer is correct according to {answer.voteNumber}{\" \"}\n                developers\n              </p>\n\n              <form>\n                <label>Vote</label>\n                <input\n                  type=\"checkbox\"\n                  value\n                  onChange={e => this.handleChange(index, e)}\n                ></input>\n              </form>\n            </div>\n          );\n        });\n      }\n      return (\n        <div className=\"question\">\n          <h2 className=\"question__title\">{this.state.question.title}</h2>\n          <div className=\"question__answers\">{answers}</div>\n\n          <Link to=\"post-answer\">\n            <div>You know the answer?</div>\n          </Link>\n\n          <Link to=\"/\">Go back</Link>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Question;\n","import React from \"react\";\nimport { Link, navigate } from \"@reach/router\";\n\nclass AskQuestion extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newQuestion: {\n        slug: \"\",\n        title: \"\"\n      }\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return (\n      <div className=\"ask-question\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"ask-question__question\">\n            <label htmlFor=\"question\">Question</label>\n            <input\n              value={this.state.newQuestion.title}\n              name=\"question\"\n              type=\"text\"\n              onChange={this.handleChange}\n            ></input>\n          </div>\n          <div className=\"ask-question__submit-button\">\n            <input type=\"submit\" value=\"Ask\"></input>\n          </div>\n        </form>\n        <Link to=\"/questions\">Go back</Link>\n      </div>\n    );\n  }\n  handleChange(event) {\n    this.setState({\n      newQuestion: {\n        title: event.target.value\n      }\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.state.newQuestion.title) {\n      this.props.addQuestion({\n        title: this.state.newQuestion.title\n      });\n      this.setState({\n        newQuestion: {\n          title: \"\"\n        }\n      });\n      navigate(\"/\");\n    }\n  }\n}\n\nexport default AskQuestion;\n","import React from \"react\";\nimport { Link, navigate } from \"@reach/router\";\n\nclass PostAnswer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newAnswer: \"\",\n      question: {\n        title: \"\"\n      }\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this._asyncRequest = this.props\n      .getQuestion(this.props.questionSlug)\n      .then(response => {\n        this._asyncRequest = null;\n        return response.json();\n      })\n      .then(data => {\n        console.log(data);\n        this.setState({\n          question: data\n        });\n      });\n  }\n  componentWillUnmount() {\n    if (this._asyncRequest) {\n      this._asyncRequest.cancel();\n    }\n  }\n\n  render() {\n    if (this.state.question === null) {\n      return \"Loading\";\n    } else {\n      return (\n        <div className=\"post-answer\">\n          <h2>{this.state.question.title}</h2>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"post-answer__answer\">\n              <label htmlFor=\"answer\">Answer</label>\n              <textarea\n                value={this.state.newAnswer}\n                name=\"answer\"\n                onChange={this.handleChange}\n              ></textarea>\n            </div>\n            <div className=\"post-answer__submit-button\">\n              <input type=\"submit\" value=\"Post\"></input>\n            </div>\n          </form>\n          <Link to=\"/questions\">Go back</Link>\n        </div>\n      );\n    }\n  }\n  handleChange(event) {\n    this.setState({\n      newAnswer: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.state.newAnswer) {\n      let answerObj = {\n        title: this.state.newAnswer,\n        voteNumber: 0\n      };\n\n      this.props.addAnswer(answerObj, this.state.question.slug);\n      this.setState({\n        newAnswer: \"\"\n      });\n      navigate(\"/questions\");\n    }\n  }\n}\n\nexport default PostAnswer;\n","import React from \"react\";\nimport Questions from \"./Questions\";\nimport Question from \"./Question\";\nimport { Router, Redirect, navigate } from \"@reach/router\";\nimport AskQuestion from \"./AskQuestion\";\nimport PostAnswer from \"./PostAnswer\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      questions: []\n    };\n  }\n\n  componentDidMount() {\n    this.getAllQuestions();\n  }\n\n  getAllQuestions() {\n    fetch(\"http://localhost:8080/api/questions\")\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({\n          questions: data\n        });\n      });\n  }\n\n  getQuestion(slug) {\n    return fetch(`http://localhost:8080/api/questions/${slug}`);\n  }\n  addQuestion(question) {\n    fetch(\"http://localhost:8080/api/questions\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(question)\n    })\n      .then(function(response) {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({\n          questions: data\n        });\n      });\n  }\n  addAnswer(answer, slug) {\n    fetch(`http://localhost:8080/api/questions/${slug}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(answer)\n    })\n      .then(function(response) {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({\n          questions: data\n        });\n        navigate(`/questions/${slug}`);\n      });\n  }\n\n  voteForAnswer(questionSlug, answerSlug, newVoteNumber) {\n    fetch(`http://localhost:8080/api/questions/${questionSlug}/${answerSlug}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ newVoteNumber: newVoteNumber })\n    })\n      .then(function(response) {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({\n          questions: data\n        });\n        navigate(`/questions/${questionSlug}`);\n      });\n  }\n\n  render() {\n    return (\n      <Router>\n        <Redirect from=\"/\" to=\"/questions\" noThrow />\n        <Questions path=\"/questions\" questions={this.state.questions} />\n        <Question\n          path=\"/questions/:questionSlug\"\n          getQuestion={slug => this.getQuestion(slug)}\n          voteForAnswer={(questionSlug, answerSlug, newVoteNumber) =>\n            this.voteForAnswer(questionSlug, answerSlug, newVoteNumber)\n          }\n        />\n        <AskQuestion\n          path=\"/questions/ask\"\n          addQuestion={question => this.addQuestion(question)}\n        />\n        <PostAnswer\n          path=\"/questions/:questionSlug/post-answer\"\n          getQuestion={slug => this.getQuestion(slug)}\n          addAnswer={(answer, slug) => this.addAnswer(answer, slug)}\n        />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}